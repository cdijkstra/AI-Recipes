@page "/suggestions"
@using System.Net.Http.Headers
@using ai_recipes_blazor.Data.DTOs
@using Newtonsoft.Json

<h3>Awesome suggestions</h3>

<div class="grid grid-cols-3 gap-4">
    @foreach (var suggestionData in suggestionsData)
    {
            <div class="p-4 border border-gray-200 rounded">
                <Suggestion
                    Title=@suggestionData.Title
                    Difficulty=@suggestionData.Difficulty
                    Duration=@suggestionData.Duration
                    ImageUrl=@suggestionData.ImageUrl
                    Ingredients=@suggestionData.Ingredients
                    ></Suggestion>
            </div>
    }
</div>

@code {
    private List<SuggestionData> suggestionsData = new List<SuggestionData>();

    protected override async Task OnInitializedAsync()
    {
        // Fetch data for multiple suggestions concurrently
        var tasks = Enumerable.Range(0, 2) // Replace with the number of suggestions you want
            .Select(_ => FetchSuggestionData())
            .ToArray();

        var fetchedData = await Task.WhenAll(tasks);
        suggestionsData.AddRange(fetchedData);
    }

    private async Task<SuggestionData> FetchSuggestionData()
    {
        // Make API calls and retrieve data for a single suggestion
        // Example:
        
        // string title = await YourTitleApiCall();
        string imageUrl = await ObtainImageUrl();
        // string difficulty = await YourDifficultyApiCall();
        // string ingredients = await YourIngredientsApiCall();
        // string duration = await YourDurationApiCall();

        return new SuggestionData
        {
            Title = "title",
            ImageUrl = imageUrl,
            Difficulty = "difficulty",
            Ingredients = new Random().Next(1,6),
            Duration = "duration"
        };
    }

    // Define methods for your API calls
    
    // Define a data structure to hold suggestion data
    public class SuggestionData
    {
        public string Title { get; set; }
        public string ImageUrl { get; set; }
        public string Difficulty { get; set; }
        public int Ingredients { get; set; }
        public string Duration { get; set; }
    }
    
    public async Task<string> ObtainImageUrl()
    {
        string token = Environment.GetEnvironmentVariable("OPENAI_API_KEY");
        string apiUrl = "https://api.openai.com/v1/images/generations";

        // Set the request data
        var requestData = new
        {
            prompt = "A western style Thai green curry with chili powder",
            n = 1,
            size = "1024x1024"
        };

        // Create an HttpClient
        using HttpClient httpClient = new HttpClient();
        // Add the API key to the request headers
        httpClient.DefaultRequestHeaders.Add("Authorization", $"Bearer {token}");

        // Serialize the request data to JSON
        var content = new StringContent(JsonConvert.SerializeObject(requestData));
        // Set the content type
        content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
        // Make the POST request
        HttpResponseMessage response = await httpClient.PostAsync(apiUrl, content);

        // Check if the request was successful
        if (!response.IsSuccessStatusCode)
        {
            Console.WriteLine($"Error: {response.StatusCode} - {response.ReasonPhrase}");
            return "";
        }

        var responseContent = await response.Content.ReadAsStringAsync();
        ImageResponse imageResponse = JsonConvert.DeserializeObject<ImageResponse>(responseContent);
        return imageResponse.data[0].url;
    }
}
